<?php

namespace App\Http\Controllers;

use App\Satker;
use App\Provinsi;
use App\Imports\SatkerImport;
use Illuminate\Http\Request;
use Maatwebsite\Excel\Facades\Excel;

class SatkerController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }

    public function viewSatker()
    {
        $provinsi   = new Provinsi;

        $modul      = 'Master';
        $current    = "Data Satuan Kerja";

        $data_prov  = $provinsi->orderBy('namaprov')->get();

        return view('contents.master.satker.data', compact('current', 'modul', 'data_prov'));
    }

    public function data()
    {
        $satker     = new Satker;

        $i          = 0;
        $data       = $satker->get();
        
        foreach($data as $value)
        {
            $button = '<div class="btn-group-vertical">
                <div class="btn-group">
                    <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false"></button>
                    <ul class="dropdown-menu" style="">
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="updateForm('.$value->id.', \''.$value->kode.'\', \''.$value->jenis_satker.'\', \''.$value->provinsi.'\', \''.$value->nama_satker.'\', \''.$value->kode_sakti_pagu.'\')">Ubah</a></li>
                        <li><a class="dropdown-item text-danger" href="javascript:void(0)" onclick="remove(\''.$value->id.'\')">Hapus</a></li>
                    </ul>
                </div>
            </div>
            ';

            $data[$i]->button           = $button;

            $i++;
        }

        return $data;
    }

    public function submit(Request $request)
    {
        $satker = new Satker;

        try
        {
            if($request->id_satker == "none")
            {
                $satker->create([
                    'kode'              => $request->kode_satker,
                    'provinsi'          => $request->provinsi,
                    'nama_satker'       => $request->nama_satker,
                    'jenis_satker'      => $request->jenis_satker,
                    'kode_sakti_pagu'   => $request->kode_sakti_pagu,
                    'synch'             => 0,
                    'synch_realisasi'   => 0
                ]);
            }
            else
            {
                $satker->where('id', $request->id_satker)->update([
                    'kode'              => $request->kode_satker,
                    'provinsi'          => $request->provinsi,
                    'nama_satker'       => $request->nama_satker,
                    'jenis_satker'      => $request->jenis_satker,
                    'kode_sakti_pagu'   => $request->kode_sakti_pagu,
                    'synch'             => 0,
                    'synch_realisasi'   => 0
                ]);
            }

            return response()->json([
                'status'    => 'success',
                'title'     => 'Satuan Kerja Berhasil Disimpan',
                'message'   => 'Satuan Kerja Berhasil Disimpan'
            ]);
        }
        catch (\Illuminate\Database\QueryException $e)
        {

            return response()->json([
                'status' => 'error',
                'message' => $e->getMessage(),
                'title' => 'Oopps.. Error Processing. Please Try Again'
            ]);
        }
    }

    public function destroy(Request $request)
    {
        $satker = new Satker;

        try
        {
            $satker->where('id', $request->id)->delete();

            return response()->json([
                'status'    => 'success',
                'title'     => 'Satuan Kerja Berhasil Dihapus',
                'message'   => 'Satuan Kerja Berhasil Dihapus'
            ]);
        }
        catch (\Illuminate\Database\QueryException $e)
        {

            return response()->json([
                'status' => 'error',
                'message' => $e->getMessage(),
                'title' => 'Oopps.. Error Processing. Please Try Again'
            ]);
        }
    }

    public function import() 
    {
        Excel::import(new SatkerImport, 'Master Satker.xlsx');
        
        return true;
    }

}
